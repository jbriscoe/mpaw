// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerShell.MinistryPlatform.v001.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Provides basic metadata about a table.
    /// </summary>
    public partial class TableInfo
    {
        /// <summary>
        /// Initializes a new instance of the TableInfo class.
        /// </summary>
        public TableInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TableInfo class.
        /// </summary>
        /// <param name="name">Gets or sets the table name.</param>
        /// <param name="accessLevel">Gets or sets the maximum access level to
        /// this table. Possible values include: 'None', 'Read', 'ReadWrite',
        /// 'ReadWriteAssign', 'ReadWriteAssignDelete'</param>
        /// <param name="specialPermissions">Gets or sets the flags indicating
        /// allowed actions on this table. Possible values include: 'None',
        /// 'FileAttach', 'DataImport', 'DataExport', 'SecureRecord',
        /// 'AddComment', 'All'</param>
        /// <param name="columns">Gets collection of the table columns.</param>
        public TableInfo(string name = default(string), string accessLevel = default(string), string specialPermissions = default(string), IList<ColumnInfo> columns = default(IList<ColumnInfo>))
        {
            Name = name;
            AccessLevel = accessLevel;
            SpecialPermissions = specialPermissions;
            Columns = columns;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the table name.
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the maximum access level to this table. Possible
        /// values include: 'None', 'Read', 'ReadWrite', 'ReadWriteAssign',
        /// 'ReadWriteAssignDelete'
        /// </summary>
        [JsonProperty(PropertyName = "AccessLevel")]
        public string AccessLevel { get; set; }

        /// <summary>
        /// Gets or sets the flags indicating allowed actions on this table.
        /// Possible values include: 'None', 'FileAttach', 'DataImport',
        /// 'DataExport', 'SecureRecord', 'AddComment', 'All'
        /// </summary>
        [JsonProperty(PropertyName = "SpecialPermissions")]
        public string SpecialPermissions { get; set; }

        /// <summary>
        /// Gets collection of the table columns.
        /// </summary>
        [JsonProperty(PropertyName = "Columns")]
        public IList<ColumnInfo> Columns { get; set; }

    }
}
